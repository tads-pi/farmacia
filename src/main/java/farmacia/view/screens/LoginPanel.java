/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package farmacia.view.screens;

import farmacia.view.Sizes;
import farmacia.view.classes.Funcionario;
import farmacia.view.libs.validators.Validators;
import java.util.ArrayList;
import farmacia.view.interfaces.ILoginListener;
import farmacia.view.interfaces.ISellingsPanel;
import farmacia.view.libs.validators.InvalidResponseBody;

/**
 *
 * @author kcalixto
 */
public class LoginPanel extends javax.swing.JPanel implements ISellingsPanel {

    private ArrayList<ILoginListener> listeners = new ArrayList<ILoginListener>();
    private Validators v = new Validators();

    /**
     * Creates new form LoginPanel
     */
    public LoginPanel() {
        initComponents();
    }

    /**
     * Adiciona outro JInternalFrame como listener da ação de login efetuado
     * 
     * {@link farmacia.view.MainFrame#login()}
     * @param ILoginListener
     * @return void
     */
    public void addListener(ILoginListener toAdd) {
        listeners.add(toAdd);
    }

    /**
     * Notifica todos os listeners da ação de login efetuado que a ação foi realizada
     * @params void
     * @return void
     */
    public void login(boolean isGerente) {
        clearFields();
        // Notify everybody that may be interested.
        for (ILoginListener ll : listeners) {
            ll.login(isGerente);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loginInput = new javax.swing.JTextField();
        loginLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        confirmButton = new farmacia.view.libs.buttons.ConfirmButton();
        passwordInput = new javax.swing.JPasswordField();
        errorLabel = new javax.swing.JLabel();
        logo2 = new farmacia.view.libs.Logo();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(Sizes.FRAME_SIZE);
        setMinimumSize(Sizes.FRAME_SIZE);
        setPreferredSize(Sizes.INTERNAL_FRAME_SIZE);
        setSize(Sizes.FRAME_SIZE);
        setVerifyInputWhenFocusTarget(false);

        loginInput.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        loginInput.setMaximumSize(new java.awt.Dimension(217, 24));
        loginInput.setMinimumSize(new java.awt.Dimension(217, 24));
        loginInput.setPreferredSize(new java.awt.Dimension(217, 24));
        loginInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                loginInputKeyPressed(evt);
            }
        });

        loginLabel.setBackground(new java.awt.Color(65, 65, 65));
        loginLabel.setFont(new java.awt.Font("Monospaced", 0, 10)); // NOI18N
        loginLabel.setForeground(new java.awt.Color(65, 65, 65));
        loginLabel.setText("login");

        passwordLabel.setBackground(new java.awt.Color(65, 65, 65));
        passwordLabel.setFont(new java.awt.Font("Monospaced", 0, 10)); // NOI18N
        passwordLabel.setForeground(new java.awt.Color(65, 65, 65));
        passwordLabel.setText("senha");

        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });

        passwordInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordInputKeyReleased(evt);
            }
        });

        errorLabel.setFont(new java.awt.Font("Monospaced", 1, 10)); // NOI18N
        errorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        errorLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(210, 210, 210)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loginInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loginLabel)
                    .addComponent(logo2, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.CENTER, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(passwordInput, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(passwordLabel)
                        .addGroup(javax.swing.GroupLayout.Alignment.CENTER, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(confirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(210, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(224, 224, 224)
                .addComponent(logo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(loginLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(passwordLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(confirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(125, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        String unprotectedPassword = new String(passwordInput.getPassword());
        InvalidResponseBody loginResponse = v.isValidLogin(loginInput.getText(), unprotectedPassword);
        
        if (!loginResponse.haveErrors()) {
            Funcionario funcionario = funcionarioDAO.login(loginInput.getText().toString(), unprotectedPassword);

            if(!funcionario.isEmpty()){
                login(funcionario.isGerente());
            }else{
                errorLabel.setText("Login ou senha incorretos");
            }
        }else{
            errorLabel.setText(loginResponse.getLabeledErrorFields());
        }
    }//GEN-LAST:event_confirmButtonActionPerformed

    private void loginInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loginInputKeyPressed
        if (!loginInput.getText().isEmpty() &&
                evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            passwordInput.requestFocus();
        }
    }//GEN-LAST:event_loginInputKeyPressed

    private void passwordInputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordInputKeyReleased
        if (passwordInput.getPassword().length > 0
                && evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            confirmButton.doClick();
        }
    }//GEN-LAST:event_passwordInputKeyReleased
    
    /**
     * Limpa campos de login e senha
     */
    private void clearFields(){
        loginInput.setText("");
        passwordInput.setText("");
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private farmacia.view.libs.buttons.ConfirmButton confirmButton;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JTextField loginInput;
    private javax.swing.JLabel loginLabel;
    private farmacia.view.libs.Logo logo2;
    private javax.swing.JPasswordField passwordInput;
    private javax.swing.JLabel passwordLabel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void confirmPressed(int newStep) {
        // TODO Auto-generated method stub
        
    }

    @Override
    public void cancelPressed(int newStep) {
        // TODO Auto-generated method stub
        
    }

}
