/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package farmacia.view.screens;

import farmacia.view.Sizes;
import farmacia.view.constants;
import farmacia.view.classes.Cliente;
import farmacia.view.interfaces.IItemsPanel;
import farmacia.view.interfaces.ISellingsPanel;
import farmacia.view.libs.TableUtils;
import farmacia.view.libs.mysql.dao.ClienteDAO;
import farmacia.view.libs.validators.Validators;

import java.awt.Color;
import java.util.ArrayList;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Guilherme Thomazini
 */
public class ClienteRelatorio extends javax.swing.JInternalFrame implements ISellingsPanel, IItemsPanel {
    private Validators v = new Validators();
    /**
     * Creates new form ClienteRelatorio
     */
    public ClienteRelatorio() {
        initComponents();
        TableUtils.addToolTip(tabelaCliente);
        loadTable(loadClintes());
    }

    public ArrayList<Cliente> loadClintes() {
        ArrayList<Cliente> response = clienteDAO.findAll();
        System.out.println("Loaded " + response.size() + " produtos");
        return response;
    }

    public void loadTable(ArrayList<Cliente> cliente) {
        System.out.println("filling table cliente with " + cliente.size() + " items");
        DefaultTableModel model = (DefaultTableModel) tabelaCliente.getModel();
        model.getDataVector().removeAllElements();

        for (Cliente c : cliente) {
            model.addRow(
                    new Object[] { c.getId(), c.getNome(), c.getEmail(), c.getCpf(), c.getEndereco(),
                            c.getNumeroDeTelefone(), c.getGenero(), c.getEstadoCivil(), c.getParsedDataDeNascimento(),
                            c.getCriadoEm(), c.getAtualizadoEm(), c.isAtivo() });
        }
        System.out.println("filled table cliente successfully");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaCliente = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        inputTelefone = new javax.swing.JTextField();
        inputCpf = new javax.swing.JFormattedTextField();
        buttonEditar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        comboBoxGenero = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        comboBoxEstadoCivil = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        inputNome = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        inputEmail = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        inputEndereco = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        inputData = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        sliderAtivo = new javax.swing.JSlider();
        ativoLabel = new javax.swing.JLabel();

        setMaximumSize(Sizes.INTERNAL_FRAME_SIZE);
        setMinimumSize(Sizes.INTERNAL_FRAME_SIZE);
        setPreferredSize(Sizes.INTERNAL_FRAME_SIZE);

        tabelaCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "E-mail", "CPF", "Endereço", "Telefone", "Genero", "Estado civil", "Data de nascimento", "Criado em", "Atualizado em", "Ativo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelaCliente);

        jLabel1.setText("Telefone");

        inputCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        buttonEditar.setText("Editar");
        buttonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditarActionPerformed(evt);
            }
        });

        jLabel8.setText("endereço");

        comboBoxGenero.setModel(constants.generosModel);

        jLabel6.setText("e-mail");

        comboBoxEstadoCivil.setModel(constants.estadosCivisModel);

        jLabel7.setText("CPF");

        jLabel9.setText("Genero");

        inputNome.setMaximumSize(new java.awt.Dimension(120, 24));
        inputNome.setMinimumSize(new java.awt.Dimension(120, 24));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4.setText("Editar");

        inputEmail.setMaximumSize(new java.awt.Dimension(120, 24));
        inputEmail.setMinimumSize(new java.awt.Dimension(120, 24));

        jLabel5.setText("Nome");

        jLabel10.setText("Estado Civil");

        inputEndereco.setMaximumSize(new java.awt.Dimension(120, 24));
        inputEndereco.setMinimumSize(new java.awt.Dimension(120, 24));

        saveButton.setText("Salvar");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        jLabel11.setText("Data de Nascimento");

        sliderAtivo.setMaximum(1);
        sliderAtivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sliderAtivoMouseClicked(evt);
            }
        });

        ativoLabel.setText("ativo");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(inputNome, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(inputEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel5)
                                            .addGap(99, 99, 99)
                                            .addComponent(jLabel6))
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(58, 58, 58)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(ativoLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(sliderAtivo, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(inputEndereco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(109, 109, 109))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(inputCpf)
                                        .addGap(8, 8, 8)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(inputTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboBoxGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboBoxEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(inputData))))
                        .addGap(72, 72, 72))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(saveButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonEditar, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ativoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(sliderAtivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 42, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(jLabel1)
                                .addComponent(jLabel9)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBoxGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBoxEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel11))
                .addGap(20, 20, 20)
                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        try{
            Cliente c = getClienteFromFields();
            clienteDAO.execute(c, ClienteDAO.UPDATE);

            loadTable(loadClintes());
        }catch (Exception e) {
            System.out.println("cliente relatorio err: " + e.getLocalizedMessage());
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void buttonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditarActionPerformed
        Cliente cliente = clienteDAO.findById(getSelectedClienteId());

        fillFields(cliente);
    }//GEN-LAST:event_buttonEditarActionPerformed

    private void sliderAtivoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sliderAtivoMouseClicked
        if(sliderAtivo.getValue() == 0){
            ativoLabel.setForeground(Color.red);
        }else{
            ativoLabel.setForeground(Color.green);
        }
    }//GEN-LAST:event_sliderAtivoMouseClicked

    /**
     * 
     * @return id do cliente selecionado na tabela
     */
    private int getSelectedClienteId() {
        int index = tabelaCliente.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tabelaCliente.getModel();

        int ID_CLIENTE_INDEX = 0;
        if (index != -1) {
            return (Integer) model.getValueAt(index, ID_CLIENTE_INDEX);
        } else {
            System.out.println("Nenhum item selecionado");
            return -1;
        }
    }

    private void fillFields(Cliente c){
        setCurrentEditingId(c.getId());
        inputNome.setText(c.getNome());
        inputEmail.setText(c.getEmail());
        inputCpf.setText(c.getCpf());
        inputEndereco.setText(c.getEndereco());
        inputTelefone.setText(c.getNumeroDeTelefone());
        comboBoxGenero.setSelectedIndex(c.getGeneroIndex());
        comboBoxEstadoCivil.setSelectedIndex(c.getEstadoCivilIndex());
        inputData.setText(c.getParsedDataDeNascimento());

        int value = 0;
        if (c.isAtivo()) value = 1;
        sliderAtivo.setValue(value);
    }
    
    private Cliente getClienteFromFields(){
        boolean ativo = false;
        if(sliderAtivo.getValue() == 1) ativo = true;

        ArrayList<String> invalidFields = v.isValidRegister(
            inputNome.getText().toString(),
            inputEmail.getText().toString(),
            inputCpf.getText().toString(),
            inputData.getText().toString().replaceAll("-", "/"),
            inputTelefone.getText().toString(),
            comboBoxGenero.getSelectedItem().toString(),
            inputEndereco.getText().toString(),
            comboBoxEstadoCivil.getSelectedItem().toString()
            );
        String invalidFieldsMessage = "Verifique os campos de\n";

        if (invalidFields.size() > 0) {
            for (int i = 0; i < invalidFields.size(); i++) {
                invalidFieldsMessage += "- " + invalidFields.get(i) + "\n";
            }
                JOptionPane.showMessageDialog(this, invalidFieldsMessage);
            throw new Error(invalidFieldsMessage);
        } 
        return new Cliente(
            getCurrentEditingId(),
            inputNome.getText(),
            inputEmail.getText(),
            inputCpf.getText(),
            inputEndereco.getText(),
            inputTelefone.getText(),
            comboBoxGenero.getSelectedItem().toString(),
            comboBoxEstadoCivil.getSelectedItem().toString(),
            inputData.getText().replaceAll("-", "/"),
            ativo
        );
    }

    private int currentEditingId = 0;
    /**
     * Define o id de cliente que está sendo editado no momento
     * @param id
     */
    private void setCurrentEditingId(int id){
        this.currentEditingId = id;
    }
    private int getCurrentEditingId(){
        return currentEditingId;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ativoLabel;
    private javax.swing.JButton buttonEditar;
    private javax.swing.JComboBox<String> comboBoxEstadoCivil;
    private javax.swing.JComboBox<String> comboBoxGenero;
    private javax.swing.JFormattedTextField inputCpf;
    private javax.swing.JTextField inputData;
    private javax.swing.JTextField inputEmail;
    private javax.swing.JTextField inputEndereco;
    private javax.swing.JTextField inputNome;
    private javax.swing.JTextField inputTelefone;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton saveButton;
    private javax.swing.JSlider sliderAtivo;
    private javax.swing.JTable tabelaCliente;
    // End of variables declaration//GEN-END:variables

    @Override
    public void confirmPressed(int newStep) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from
                                                                       // nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void cancelPressed(int newStep) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from
                                                                       // nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void reloadTable() {
        loadTable(loadClintes());
    }
}
