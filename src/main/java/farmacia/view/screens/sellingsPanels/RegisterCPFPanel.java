/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package farmacia.view.screens.sellingsPanels;

import farmacia.view.entities.User;
import farmacia.view.interfaces.ISellingsPanel;
import farmacia.view.libs.validators.Validators;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author kcalixto
 */
public class RegisterCPFPanel extends javax.swing.JPanel implements ISellingsPanel {

    private ArrayList<ISellingsPanel> sellingsisteners = new ArrayList<ISellingsPanel>();
    private Validators v = new Validators();

    /**
     * Creates new form GetCPFPanel
     */
    public RegisterCPFPanel() {
        initComponents();
    }

    public void LoadUserInfo() {
        this.cpfInput.setText(currentUser.getCpf());
    }

    public void addSellingsListener(ISellingsPanel toAdd) {
        sellingsisteners.add(toAdd);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cancelButton = new farmacia.view.libs.buttons.CancelButton();
        confirmButton = new farmacia.view.libs.buttons.ConfirmButton();
        title = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        nameInput = new javax.swing.JTextField();
        emailLabel = new javax.swing.JLabel();
        emailInput = new javax.swing.JTextField();
        cpfLabel = new javax.swing.JLabel();
        cpfInput = new javax.swing.JFormattedTextField();
        birthDateLabel = new javax.swing.JLabel();
        birthDateInput = new javax.swing.JFormattedTextField();
        contactNumberLabel = new javax.swing.JLabel();
        contactNumberInput = new javax.swing.JFormattedTextField();
        genderLabel = new javax.swing.JLabel();
        genderInput = new javax.swing.JComboBox<>();
        logo1 = new farmacia.view.libs.Logo();
        addressInput = new javax.swing.JTextField();
        addressLabel = new javax.swing.JLabel();
        maritalLabel = new javax.swing.JLabel();
        maritalComboBox = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(640, 640));
        setMinimumSize(new java.awt.Dimension(640, 640));

        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        cancelButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cancelButtonKeyPressed(evt);
            }
        });

        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });

        title.setBackground(new java.awt.Color(0, 0, 0));
        title.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        title.setText("Cadastrar Cliente");

        nameLabel.setBackground(new java.awt.Color(58, 58, 58));
        nameLabel.setFont(new java.awt.Font("Monospaced", 0, 10)); // NOI18N
        nameLabel.setForeground(new java.awt.Color(58, 58, 58));
        nameLabel.setText("Nome Completo");

        nameInput.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        nameInput.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        nameInput.setMaximumSize(new java.awt.Dimension(217, 24));
        nameInput.setMinimumSize(new java.awt.Dimension(217, 24));
        nameInput.setPreferredSize(new java.awt.Dimension(217, 24));
        nameInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameInputKeyPressed(evt);
            }
        });

        emailLabel.setBackground(new java.awt.Color(58, 58, 58));
        emailLabel.setFont(new java.awt.Font("Monospaced", 0, 10)); // NOI18N
        emailLabel.setForeground(new java.awt.Color(58, 58, 58));
        emailLabel.setText("Melhor Email");

        emailInput.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        emailInput.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        emailInput.setMaximumSize(new java.awt.Dimension(217, 24));
        emailInput.setMinimumSize(new java.awt.Dimension(217, 24));
        emailInput.setPreferredSize(new java.awt.Dimension(217, 24));
        emailInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailInputActionPerformed(evt);
            }
        });
        emailInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                emailInputKeyPressed(evt);
            }
        });

        cpfLabel.setBackground(new java.awt.Color(58, 58, 58));
        cpfLabel.setFont(new java.awt.Font("Monospaced", 0, 10)); // NOI18N
        cpfLabel.setForeground(new java.awt.Color(58, 58, 58));
        cpfLabel.setText("CPF");

        try {
            cpfInput.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        cpfInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cpfInputKeyPressed(evt);
            }
        });

        birthDateLabel.setBackground(new java.awt.Color(58, 58, 58));
        birthDateLabel.setFont(new java.awt.Font("Monospaced", 0, 10)); // NOI18N
        birthDateLabel.setForeground(new java.awt.Color(58, 58, 58));
        birthDateLabel.setText("Data de Nascimento");

        try {
            birthDateInput.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        birthDateInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        birthDateInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                birthDateInputKeyPressed(evt);
            }
        });

        contactNumberLabel.setBackground(new java.awt.Color(58, 58, 58));
        contactNumberLabel.setFont(new java.awt.Font("Monospaced", 0, 10)); // NOI18N
        contactNumberLabel.setForeground(new java.awt.Color(58, 58, 58));
        contactNumberLabel.setText("Telefone de Contato");

        try {
            contactNumberInput.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) #####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        contactNumberInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                contactNumberInputKeyPressed(evt);
            }
        });

        genderLabel.setBackground(new java.awt.Color(58, 58, 58));
        genderLabel.setFont(new java.awt.Font("Monospaced", 0, 10)); // NOI18N
        genderLabel.setForeground(new java.awt.Color(58, 58, 58));
        genderLabel.setText("Gênero");

        genderInput.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        genderInput.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "M", "F", "NB", "-" }));
        genderInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                genderInputKeyPressed(evt);
            }
        });

        addressInput.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        addressInput.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        addressInput.setMaximumSize(new java.awt.Dimension(217, 24));
        addressInput.setMinimumSize(new java.awt.Dimension(217, 24));
        addressInput.setPreferredSize(new java.awt.Dimension(217, 24));
        addressInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addressInputKeyPressed(evt);
            }
        });

        addressLabel.setBackground(new java.awt.Color(58, 58, 58));
        addressLabel.setFont(new java.awt.Font("Monospaced", 0, 10)); // NOI18N
        addressLabel.setForeground(new java.awt.Color(58, 58, 58));
        addressLabel.setText("Endereço");

        maritalLabel.setBackground(new java.awt.Color(58, 58, 58));
        maritalLabel.setFont(new java.awt.Font("Monospaced", 0, 10)); // NOI18N
        maritalLabel.setForeground(new java.awt.Color(58, 58, 58));
        maritalLabel.setText("Estado Civil");

        maritalComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Solteiro (a)", "Casado (a)", "Divorciado (a)", "Viúvo (a)", "Separado (a) Judicialmente" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 462, Short.MAX_VALUE)
                .addComponent(confirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(title)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(logo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(addressInput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                            .addComponent(addressLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(emailInput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                            .addComponent(nameInput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cpfLabel)
                                        .addGap(114, 114, 114))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(cpfInput, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(birthDateLabel)
                                    .addComponent(birthDateInput, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)))
                            .addComponent(emailLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(contactNumberLabel)
                                    .addComponent(contactNumberInput, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(genderLabel)
                                    .addComponent(genderInput, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(maritalLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(maritalComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(24, 353, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(title))
                    .addComponent(logo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(nameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(emailLabel)
                .addGap(6, 6, 6)
                .addComponent(emailInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addressLabel)
                .addGap(6, 6, 6)
                .addComponent(addressInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(maritalLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(maritalComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(cpfLabel)
                        .addGap(30, 30, 30))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(birthDateLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cpfInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(birthDateInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(genderLabel)
                    .addComponent(contactNumberLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(genderInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(contactNumberInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 182, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void emailInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailInputActionPerformed

    private void addressInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addressInputKeyPressed
        if (!addressInput.getText().isEmpty()
                && evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            maritalComboBox.requestFocus();
        }
    }//GEN-LAST:event_addressInputKeyPressed

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_confirmButtonActionPerformed
        ArrayList<String> invalidFields = v.isValidRegister(
                this.nameInput.getText().toString(),
                this.emailInput.getText().toString(),
                this.cpfInput.getText().toString(),
                this.birthDateInput.getText().toString(),
                this.contactNumberInput.getText().toString(),
                this.genderInput.getSelectedItem().toString(),
                this.addressInput.getText().toString(),
                this.maritalComboBox.getSelectedItem().toString()
        );
        String invalidFieldsMessage = "Verifique os campos de\n";

        if (invalidFields.size() != 0) {
            for (int i = 0; i < invalidFields.size(); i++) {
                invalidFieldsMessage += "- " + invalidFields.get(i) + "\n";
            }
            JOptionPane.showMessageDialog(this, invalidFieldsMessage);
        } else {

            currentUser.set(new User(
                    this.nameInput.getText(),
                    this.emailInput.getText(),
                    this.cpfInput.getText(),
                    this.birthDateInput.getText(),
                    this.contactNumberInput.getText(),
                    this.genderInput.getSelectedItem().toString(),
                    this.addressInput.getText(),
                    this.maritalComboBox.getSelectedItem().toString()
            ));

            if (!currentUser.isEmpty()) {
                // Notify everybody that may be interested.
                for (ISellingsPanel ll : sellingsisteners) {
                    ll.confirmPressed(STEP_SHOW_CPF);
                }
            }else{
                JOptionPane.showMessageDialog(this, "Ocorreu um erro, tente novamente.");
                System.out.println("currentUser may be empty at RegisterCpf.java");
            }
        }

    }// GEN-LAST:event_confirmButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cancelButtonActionPerformed
        for (ISellingsPanel ll : sellingsisteners) {
            ll.cancelPressed(STEP_GET_CPF);
        }
    }// GEN-LAST:event_cancelButtonActionPerformed

    private void nameInputKeyPressed(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_nameInputKeyPressed
        if (!nameInput.getText().isEmpty()
                && evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            emailInput.requestFocus();
        }
    }// GEN-LAST:event_nameInputKeyPressed

    private void emailInputKeyPressed(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_emailInputKeyPressed
        if (!emailInput.getText().isEmpty()
                && evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            cpfInput.requestFocus();
        }
    }// GEN-LAST:event_emailInputKeyPressed

    private void genderInputKeyPressed(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_genderInputKeyPressed
        if (genderInput.getSelectedIndex() != 0
                && evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            confirmButton.doClick();
        }
    }// GEN-LAST:event_genderInputKeyPressed

    private void cancelButtonKeyPressed(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_cancelButtonKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ESCAPE) {
            cancelButton.doClick();
        }
    }// GEN-LAST:event_cancelButtonKeyPressed

    private void cpfInputKeyPressed(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_cpfInputKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            birthDateInput.requestFocus();
        }
    }// GEN-LAST:event_cpfInputKeyPressed

    private void birthDateInputKeyPressed(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_birthDateInputKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            contactNumberInput.requestFocus();
        }
    }// GEN-LAST:event_birthDateInputKeyPressed

    private void contactNumberInputKeyPressed(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_contactNumberInputKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            genderInput.requestFocus();
        }
    }// GEN-LAST:event_contactNumberInputKeyPressed

    public void clearFields() {
        nameInput.setText("");
        emailInput.setText("");
        cpfInput.setText("");
        birthDateInput.setText("");
        contactNumberInput.setText("");
        genderInput.setSelectedIndex(0);
        addressInput.setText("");
        maritalComboBox.setSelectedIndex(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressInput;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JFormattedTextField birthDateInput;
    private javax.swing.JLabel birthDateLabel;
    private farmacia.view.libs.buttons.CancelButton cancelButton;
    private farmacia.view.libs.buttons.ConfirmButton confirmButton;
    private javax.swing.JFormattedTextField contactNumberInput;
    private javax.swing.JLabel contactNumberLabel;
    private javax.swing.JFormattedTextField cpfInput;
    private javax.swing.JLabel cpfLabel;
    private javax.swing.JTextField emailInput;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JComboBox<String> genderInput;
    private javax.swing.JLabel genderLabel;
    private farmacia.view.libs.Logo logo1;
    private javax.swing.JComboBox<String> maritalComboBox;
    private javax.swing.JLabel maritalLabel;
    private javax.swing.JTextField nameInput;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables

    @Override
    public void confirmPressed(int newStep) {

    }

    @Override
    public void cancelPressed(int newStep) {
    }
}
